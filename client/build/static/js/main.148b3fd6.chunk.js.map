{"version":3,"sources":["actions/types.js","actions/index.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["FETCH_USER","fetchUser","dispatch","a","axios","get","res","type","payload","data","handleToken","token","post","Payments","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Header","this","auth","href","style","margin","credits","to","renderContent","Landing","textAlign","Dashboard","SurveyNew","App","exact","path","component","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"yWAAaA,EAAa,aCIbC,EAAY,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACXC,IAAMC,IAAI,qBADC,OACvBC,EADuB,OAG7BJ,EAAS,CAAEK,KAAMP,EAAYQ,QAASF,EAAIG,OAHb,2CAAN,uDAMZC,EAAc,SAAAC,GAAK,8CAAI,WAAMT,GAAN,eAAAC,EAAA,sEAChBC,IAAMQ,KAAK,cAAeD,GADV,OAC5BL,EAD4B,OAGlCJ,EAAS,CAAEK,KAAMP,EAAYQ,QAASF,EAAIG,OAHR,2CAAJ,uD,iBCJ1BI,E,uKACM,IAAD,OACP,OACE,cAAC,IAAD,CACEC,KAAK,SACLC,YAAY,yBACZC,OAAQ,IACRL,MAAO,SAAAA,GAAK,OAAI,EAAKM,MAAMP,YAAYC,IACvCO,UAAWC,8GALb,SAOE,wBAAQC,UAAU,MAAlB,+B,GAVeC,aAkBRC,cAAQ,KAAMC,EAAdD,CAAuBT,GClBhCW,E,8KAEF,OAAQC,KAAKR,MAAMS,MACjB,KAAK,KACH,OACF,KAAK,EACH,OAAO,6BAAI,mBAAGC,KAAK,eAAR,iCACX,QACE,MAAO,CACL,6BAAY,cAAC,EAAD,KAAJ,KACR,qBAAYC,MAAO,CAAEC,OAAQ,UAA7B,sBACUJ,KAAKR,MAAMS,KAAKI,UADlB,KAGR,6BAAY,mBAAGH,KAAK,cAAR,qBAAJ,S,+BAKhB,OACE,8BACE,sBAAKP,UAAU,cAAf,UACE,cAAC,IAAD,CACEW,GAAIN,KAAKR,MAAMS,KAAO,WAAa,IACnCN,UAAU,kBAFZ,oBAMA,oBAAIA,UAAU,QAAd,SACGK,KAAKO,2B,GA5BGX,aAwCNC,mBAJf,YACE,MAAO,CAAEI,KADwB,EAARA,QAIZJ,CAAyBE,GCjCzBS,EAXC,WACd,OACE,sBAAKL,MAAO,CAAEM,UAAW,UAAzB,UACE,yCADF,uCCKEC,EAAY,kBAAM,4CAClBC,EAAY,kBAAM,4CAGlBC,E,kLAGFZ,KAAKR,MAAMhB,c,+BAIX,OACE,qBAAKmB,UAAU,YAAf,SACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,IAAIC,UAAWP,IACjC,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,WAAWC,UAAWL,IACxC,cAAC,IAAD,CAAOI,KAAK,eAAeC,UAAWJ,e,GAdhCf,aAsBHC,cAAQ,KAAMC,EAAdD,CAAuBe,GChCvBI,cAAgB,CAC7Bf,KCFa,WAAgC,IAAvBgB,EAAsB,uDAAd,KAAMC,EAAQ,uCAC5C,OAAQA,EAAOpC,MACb,KAAKP,EACH,OAAO2C,EAAOnC,UAAW,EAC3B,QACE,OAAOkC,MCKPE,EAAQC,YAAYC,EAAU,GAAIC,YAAgBC,MAExDC,IAASC,OAEP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SAAwB,cAAC,EAAD,MACxBO,SAASC,cAAc,Y","file":"static/js/main.148b3fd6.chunk.js","sourcesContent":["export const FETCH_USER = 'fetch_user';\n","import axios from 'axios';\nimport { FETCH_USER } from './types';\n\n// action creator\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n\nexport const handleToken = token => async dispatch => {\n  const res = await axios.post('/api/stripe', token);\n\n  dispatch({ type: FETCH_USER, payload: res.data });\n};\n","import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\n\nclass Payments extends Component {\n  render() {\n    return (\n      <StripeCheckout\n        name=\"Emaily\"\n        description=\"$5 for 5 email credits\"\n        amount={500}\n        token={token => this.props.handleToken(token)}\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\n      >\n        <button className=\"btn\">\n          Add Credits\n        </button>\n      </StripeCheckout>\n    );\n  }\n}\n\nexport default connect(null, actions)(Payments);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Payments from './Payments';\n\n\nclass Header extends Component {\n  renderContent() {\n    switch (this.props.auth) {\n      case null:\n        return;\n      case false:\n        return <li><a href=\"/auth/google\">Login With Google</a></li>;\n        default:\n          return [\n            <li key=\"1\"><Payments /></li>,\n            <li key=\"3\" style={{ margin: '0 10px' }}>\n            Credits: {this.props.auth.credits}\n          </li>,\n            <li key=\"2\"><a href=\"/api/logout\">Logout</a></li>\n          ];\n    }\n  }\n  render() {\n    return (\n      <nav>\n        <div className=\"nav-wrapper\">\n          <Link\n            to={this.props.auth ? '/surveys' : '/'} // 判断前面是否存在（是否login）\n            className=\"left brand-logo\"\n          >\n            Emaily\n          </Link>\n          <ul className=\"right\">\n            {this.renderContent()}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nfunction mapStateToProps({ auth }) { // from reducers\n  return { auth };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\n\nconst Landing = () => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>\n        Emaily!\n      </h1>\n      Collect feedback form your users\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions'; // import all action creators\n\n\n// create some components\nimport Header from './Header';\nimport Landing from './Landing'; // import 需要放在前面\nconst Dashboard = () => <h2>Dashboard</h2>;\nconst SurveyNew = () => <h2>SurveyNew</h2>;\n\n// create a component\nclass App extends Component {\n  // add life cycle method\n  componentDidMount() {\n    this.props.fetchUser(); // action creators are assigned to App component as props\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <BrowserRouter>\n          <div>\n            <Header />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/surveys\" component={Dashboard} />\n            <Route path=\"/surveys/new\" component={SurveyNew} />\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, actions)(App);\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n  auth: authReducer\n});\n","import { FETCH_USER } from '../actions/types';\n\nexport default function(state = null, action) {\n  switch (action.type) {\n    case FETCH_USER:\n      return action.payload || false; // if empty, return false\n    default:\n      return state;\n  }\n}\n","import 'materialize-css/dist/css/materialize.min.css'; // 引入非.js时必须加后缀\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n// create instance of redux store\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  // every time our redex store get some new state, provider will inform all children components\n  <Provider store={store}><App /></Provider>,\n  document.querySelector('#root')\n);\n// console.log('STRIPE KEY IS', process.env.REACT_APP_STRIPE_KEY);\n// console.log('Environment is', process.env.NODE_ENV);\n"],"sourceRoot":""}